default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure

stages:
  - lint
  - test
  - publish

.rust-info-script:                 &rust-info-script
  - rustup show
  - cargo --version
  - rustup +nightly show
  - cargo +nightly --version
  - cargo spellcheck --version
  - bash --version
  - sccache -s

.kubernetes-env:          &kubernetes-env
  image:                  "node:16.15"
  tags:
    - kubernetes-parity-build

.docker-env:                       &docker-env
  image:                           "paritytech/ci-linux:production"
  before_script:
    - *rust-info-script
  interruptible:                   true
  tags:
    - linux-docker

ts-lint:
  stage:                  lint
  <<:                     *kubernetes-env
  script:
    - make ts-install
    - make ts-lint

ts-check-format:
  stage:                  lint
  <<:                     *kubernetes-env
  script:
    - make ts-install
    - make ts-check-format

ts-check-spelling:
  stage:                  lint
  <<:                     *kubernetes-env
  script:
    - make ts-install
    - make ts-check-spelling

rust-check-format:
  stage:                  lint
  <<:                     *docker-env
  script:
    - cargo +nightly fmt --all -- --check

rust-lint:
  stage: lint
  <<:                     *docker-env
  script:
    - cargo +stable clippy --workspace --exclude rust_analyzer_wasm --exclude contract --all-targets --all-features -- -D warnings

# Test
# test-rust-analyzer-wasm:
#   stage:                  test
#   <<:                     *docker-env
#   script:
#     - rustup toolchain install nightly-2022-05-24-x86_64-unknown-linux-gnu
#     - rustup component add rust-src --toolchain nightly-2022-05-24-x86_64-unknown-linux-gnu
#     - wasm-pack test --headless --chrome crates/rust_analyzer_wasm

# test-rust:
#   stage:                  test
#   # <<:                     *docker-env
#   image:                  docker.io/achimcc/ink-backend:latest
#   script:
#     - cargo build --verbose
#     - cargo test --workspace --exclude rust_analyzer_wasm --verbose
#   tags:
#     - linux-docker

build-compiler-image:
   stage:                  publish
   <<:                     *docker-env
   script:
     - buldah bud
         --format=docker
         --tag ink-backend
         ./compiler/.
