name: Compiler_Docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt -y install jq

      - name: Get last Ink version
        id: version_info
        run: echo "latest_ink_version=$(jq -r '.[0]' ./config/versions.json)" >> $GITHUB_OUTPUT

      - name: Build docker
        run: docker build -f ./docker/Dockerfile.compiler-${{ steps.version_info.outputs.latest_ink_version }} --tag ink-compiler:${{ steps.version_info.outputs.latest_ink_version }} ./docker

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main' && github.repository == 'paritytech/ink-playground'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Tag Docker image
        if: github.ref == 'refs/heads/main' && github.repository == 'paritytech/ink-playground'
        run: docker tag ink-compiler:${{ steps.version_info.outputs.latest_ink_version }} ${{ secrets.DOCKER_USER_NAME }}/ink-compiler:${{ steps.version_info.outputs.latest_ink_version }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main' && github.repository == 'paritytech/ink-playground'
        run: docker push ${{ secrets.DOCKER_USER_NAME }}/ink-compiler:${{ steps.version_info.outputs.latest_ink_version }}
